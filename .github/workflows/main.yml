name: Build, Push and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build . -t gayun5313/stretching:latest

      - name: Push Docker image
        run: docker push gayun5313/stretching:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Test SSH Connection
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p 2412 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "echo 'SSH connection successful'"
          if [ $? -ne 0 ]; then
            echo "Error: SSH connection failed."
            exit 1
          fi
          echo "SSH connection successful."

      - name: Deploy to server
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          # Print the current directory and list all files
          echo "Current directory:"
          pwd
          echo "Files in current directory:"
          ls -la

          # Ensure deploy.sh is executable
          chmod +x $GITHUB_WORKSPACE/deploy.sh

          # Copy deploy.sh to the server using sshpass
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -o StrictHostKeyChecking=no -P 2412 $GITHUB_WORKSPACE/deploy.sh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/tmp/
          if [ $? -ne 0 ]; then
            echo "Error: Failed to copy deploy.sh to the server."
            exit 1
          fi
          echo "deploy.sh successfully copied to the server."

          # Execute deploy.sh on the server using sshpass
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p 2412 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'bash /tmp/deploy.sh'
          if [ $? -ne 0 ]; then
            echo "Error: Failed to execute deploy.sh on the server."
            exit 1
          fi
          echo "deploy.sh executed successfully on the server."
